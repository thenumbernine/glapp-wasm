diff --git a/call_x86.h b/call_x86.h
index 05094ab..5f0c210 100755
--- a/call_x86.h
+++ b/call_x86.h
@@ -20,100 +20,100 @@
 
 static const unsigned char build_actionlist[1915] = {
   139,141,233,255,139,141,233,139,149,233,255,137,132,253,36,233,255,137,132,
-  253,36,233,137,148,253,36,233,255,221.0,133,233,255,217.0,133,233,255,252,
-  243.0,15.0,126,133,233,255,252,243.0,15.0,90,133,233,255,221.0,156,253,36,
-  233,255,217.0,156,253,36,233,255,102.0,15.0,214,132,253,36,233,255,252,242.0,
-  15.0,90,192,102.0,15.0,214,132,253,36,233,255,252,242.0,15.0,90,192,102.0,
-  15.0,126,132,253,36,233,255,85,137,229,87,129.0,252,236,239,255,137,77,252,
-  248,137,85,252,244,255,191,237,255,199.0,68,36,8,237,199.0,68,36,4,237,137,
-  60,36,232,251,1,0,255,199.0,68,36,8,237,199.0,68,36,4,252,255,252,255.0,252,
-  255.0,252,255.0,137,60,36,232,251,1,0,255,199.0,68,36,8,237,199.0,68,36,4,
-  237,137,60,36,232,251,1,0,199.0,68,36,8,237,199.0,68,36,4,252,255,252,255.0,
-  252,255.0,252,255.0,137,60,36,232,251,1,1,255,137,8,199.0,68,36,4,252,254,
-  252,255.0,252,255.0,252,255.0,137,60,36,232,251,1,2,255,199.0,68,36,8,237,
-  199.0,68,36,4,0,0.0,0.0,0.0,137,60,36,232,251,1,1,255,137,8,137,80,4,255,
-  137,8,255,102.0,15.0,214,0,255,217.0,24,255,217.0,88,4,255,221.0,24,255,221.0,
-  88,8,255,221.0,92,36,4,137,60,36,232,251,1,3,255,15.0,182,201,137,76,36,4,
-  137,60,36,232,251,1,4,255,15.0,182,201,255,15.0,190,201,255,137,76,36,4,137,
-  60,36,232,251,1,5,255,15.0,183,201,255,15.0,191,201,255,137,76,36,4,137,60,
-  36,232,251,1,6,255,199.0,68,36,12,0,0.0,0.0,0.0,199.0,68,36,8,237,199.0,68,
-  36,4,237,137,60,36,232,251,1,7,255,199.0,68,36,8,237,199.0,68,36,4,252,254,
-  252,255.0,252,255.0,252,255.0,137,60,36,232,251,1,0,199.0,68,36,12,237,199.0,
-  68,36,8,252,255,252,255.0,252,255.0,252,255.0,199.0,68,36,4,252,254,252,255.0,
-  252,255.0,252,255.0,137,60,36,232,251,1,8,137,68,36,32,199.0,68,36,4,252,
-  252,252,255.0,252,255.0,252,255.0,137,60,36,232,251,1,9,139,68,36,32,255,
-  199.0,68,36,8,237,199.0,68,36,4,252,254,252,255.0,252,255.0,252,255.0,137,
-  60,36,232,251,1,0,199.0,68,36,12,237,199.0,68,36,8,252,255,252,255.0,252,
-  255.0,252,255.0,199.0,68,36,4,252,254,252,255.0,252,255.0,252,255.0,137,60,
-  36,232,251,1,10,137,68,36,32,199.0,68,36,4,252,252,252,255.0,252,255.0,252,
-  255.0,137,60,36,232,251,1,9,139,68,36,32,255,199.0,68,36,4,252,254,252,255.0,
-  252,255.0,252,255.0,137,60,36,232,251,1,9,255,199.0,68,36,4,252,255,252,255.0,
-  252,255.0,252,255.0,137,60,36,232,251,1,11,255,199.0,68,36,4,252,255,252,
-  255.0,252,255.0,252,255.0,137,60,36,232,251,1,12,255,137,68,36,32,199.0,68,
-  36,4,252,253,252,255.0,252,255.0,252,255.0,137,60,36,232,251,1,9,139,68,36,
-  32,255,199.0,68,36,4,252,255,252,255.0,252,255.0,252,255.0,137,60,36,232,
-  251,1,13,255,199.0,68,36,4,252,255,252,255.0,252,255.0,252,255.0,137,60,36,
-  232,251,1,14,255,137,68,36,32,137,84,36,36,199.0,68,36,4,252,253,252,255.0,
-  252,255.0,252,255.0,137,60,36,232,251,1,9,139,68,36,32,139,84,36,36,255,199.0,
-  68,36,4,252,255,252,255.0,252,255.0,252,255.0,137,60,36,232,251,1,15,137,
-  68,36,32,199.0,68,36,4,252,253,252,255.0,252,255.0,252,255.0,137,60,36,232,
-  251,1,9,139,68,36,32,255,199.0,68,36,4,252,255,252,255.0,252,255.0,252,255.0,
-  137,60,36,232,251,1,16,255,221.0,92,36,32,199.0,68,36,4,252,253,252,255.0,
-  252,255.0,252,255.0,137,60,36,232,251,1,9,221.0,68,36,32,255,199.0,68,36,
-  4,252,255,252,255.0,252,255.0,252,255.0,137,60,36,232,251,1,17,137,68,36,
-  32,137,84,36,36,199.0,68,36,4,252,253,252,255.0,252,255.0,252,255.0,137,60,
-  36,232,251,1,9,139,68,36,32,139,84,36,36,255,199.0,68,36,4,252,255,252,255.0,
-  252,255.0,252,255.0,137,60,36,232,251,1,18,102.0,15.0,214,68,36,32,102.0,
-  15.0,214,76,36,40,199.0,68,36,4,252,253,252,255.0,252,255.0,252,255.0,137,
-  60,36,232,251,1,9,252,243.0,15.0,126,68,36,32,252,243.0,15.0,126,76,36,40,
-  255,139,141,233,199.0,68,36,8,252,255,252,255.0,252,255.0,252,255.0,137,124,
-  36,4,137,12,36,232,251,1,18,131.0,252,236,4,199.0,68,36,4,252,253,252,255.0,
-  252,255.0,252,255.0,137,60,36,232,251,1,9,255,139,125,252,252,137,252,236,
-  93,194,236,255,85,137,229,87,86,139,189,233,131.0,252,236,16,137,60,36,232,
-  251,1,19,137,198,129.0,252,248,239,255,15.0,141,244,248.0,102,184,0,0.0,199.0,
-  68,36,4,237,137,60,36,232,251,1,20,248,2,15.0,142,244,247.0,102,184,0,0.0,
-  199.0,68,36,4,237,137,60,36,232,251,1,20,255,15.0,141,244,247.0,102,184,0,
-  0.0,199.0,68,36,4,237,137,60,36,232,251,1,20,255,248,1,255,193.0,224,4,41,
-  196,129.0,252,236,239,255,199.0,68,36,8,237,199.0,68,36,4,0,0.0,0.0,0.0,137,
-  60,36,232,251,1,1,131.0,252,236,16,255,199.0,68,36,12,237,199.0,68,36,8,237,
-  199.0,68,36,4,237,137,60,36,232,251,1,8,255,199.0,68,36,12,237,199.0,68,36,
-  8,237,199.0,68,36,4,237,137,60,36,232,251,1,21,255,199.0,68,36,12,237,199.0,
-  68,36,8,237,199.0,68,36,4,237,137,60,36,232,251,1,10,255,199.0,68,36,4,237,
-  137,60,36,232,251,1,12,255,15.0,182,192,255,15.0,190,192,255,15.0,183,192,
-  255,15.0,191,192,255,199.0,68,36,4,237,137,60,36,232,251,1,12,131.0,252,248,
-  0,15.0,149.0,208,15.0,182,192,255,199.0,68,36,4,237,137,60,36,232,251,1,11,
-  255,199.0,68,36,4,237,137,60,36,232,251,1,15,255,199.0,68,36,4,237,137,60,
-  36,232,251,1,13,255,199.0,68,36,4,237,137,60,36,232,251,1,14,255,199.0,68,
-  36,4,237,137,60,36,232,251,1,16,255,199.0,68,36,4,237,137,60,36,232,251,1,
-  18,255,252,243.0,15.0,126,193,255,141,132,253,36,233,131.0,252,236,4,199.0,
-  68,36,8,237,137,124,36,4,137,4,36,232,251,1,18,255,199.0,68,36,4,237,137,
-  60,36,232,251,1,17,255,199.0,68,36,4,237,137,60,36,232,251,1,17,137,4,36,
-  217.0,4,36,255,137,20,36,217.0,4,36,255,137,224,129.0,192,239,137,68,36,12,
-  137,116,36,8,199.0,68,36,4,237,137,60,36,232,251,1,22,255,185,237,139,1,137,
-  4,36,232,251,1,23,255,131.0,196,32,255,139,148,253,36,233,255,139,12,36,255,
-  129.0,196,239,255,232,251,1,24,131.0,252,236,48,255,137,68,36,32,232,251,
-  1,25,185,237,137,1,199.0,68,36,8,237,199.0,68,36,4,237,137,60,36,232,251,
-  1,1,139,76,36,32,137,8,184,1,0.0,0.0,0.0,139,117,252,248,139,125,252,252,
+  253,36,233,137,148,253,36,233,255,221,133,233,255,217,133,233,255,252,
+  243,15,126,133,233,255,252,243,15,90,133,233,255,221,156,253,36,
+  233,255,217,156,253,36,233,255,102,15,214,132,253,36,233,255,252,242,
+  15,90,192,102,15,214,132,253,36,233,255,252,242,15,90,192,102,
+  15,126,132,253,36,233,255,85,137,229,87,129,252,236,239,255,137,77,252,
+  248,137,85,252,244,255,191,237,255,199,68,36,8,237,199,68,36,4,237,137,
+  60,36,232,251,1,0,255,199,68,36,8,237,199,68,36,4,252,255,252,255,252,
+  255,252,255,137,60,36,232,251,1,0,255,199,68,36,8,237,199,68,36,4,
+  237,137,60,36,232,251,1,0,199,68,36,8,237,199,68,36,4,252,255,252,255,
+  252,255,252,255,137,60,36,232,251,1,1,255,137,8,199,68,36,4,252,254,
+  252,255,252,255,252,255,137,60,36,232,251,1,2,255,199,68,36,8,237,
+  199,68,36,4,0,0,0,0,137,60,36,232,251,1,1,255,137,8,137,80,4,255,
+  137,8,255,102,15,214,0,255,217,24,255,217,88,4,255,221,24,255,221,
+  88,8,255,221,92,36,4,137,60,36,232,251,1,3,255,15,182,201,137,76,36,4,
+  137,60,36,232,251,1,4,255,15,182,201,255,15,190,201,255,137,76,36,4,137,
+  60,36,232,251,1,5,255,15,183,201,255,15,191,201,255,137,76,36,4,137,60,
+  36,232,251,1,6,255,199,68,36,12,0,0,0,0,199,68,36,8,237,199,68,
+  36,4,237,137,60,36,232,251,1,7,255,199,68,36,8,237,199,68,36,4,252,254,
+  252,255,252,255,252,255,137,60,36,232,251,1,0,199,68,36,12,237,199,
+  68,36,8,252,255,252,255,252,255,252,255,199,68,36,4,252,254,252,255,
+  252,255,252,255,137,60,36,232,251,1,8,137,68,36,32,199,68,36,4,252,
+  252,252,255,252,255,252,255,137,60,36,232,251,1,9,139,68,36,32,255,
+  199,68,36,8,237,199,68,36,4,252,254,252,255,252,255,252,255,137,
+  60,36,232,251,1,0,199,68,36,12,237,199,68,36,8,252,255,252,255,252,
+  255,252,255,199,68,36,4,252,254,252,255,252,255,252,255,137,60,
+  36,232,251,1,10,137,68,36,32,199,68,36,4,252,252,252,255,252,255,252,
+  255,137,60,36,232,251,1,9,139,68,36,32,255,199,68,36,4,252,254,252,255,
+  252,255,252,255,137,60,36,232,251,1,9,255,199,68,36,4,252,255,252,255,
+  252,255,252,255,137,60,36,232,251,1,11,255,199,68,36,4,252,255,252,
+  255,252,255,252,255,137,60,36,232,251,1,12,255,137,68,36,32,199,68,
+  36,4,252,253,252,255,252,255,252,255,137,60,36,232,251,1,9,139,68,36,
+  32,255,199,68,36,4,252,255,252,255,252,255,252,255,137,60,36,232,
+  251,1,13,255,199,68,36,4,252,255,252,255,252,255,252,255,137,60,36,
+  232,251,1,14,255,137,68,36,32,137,84,36,36,199,68,36,4,252,253,252,255,
+  252,255,252,255,137,60,36,232,251,1,9,139,68,36,32,139,84,36,36,255,199,
+  68,36,4,252,255,252,255,252,255,252,255,137,60,36,232,251,1,15,137,
+  68,36,32,199,68,36,4,252,253,252,255,252,255,252,255,137,60,36,232,
+  251,1,9,139,68,36,32,255,199,68,36,4,252,255,252,255,252,255,252,255,
+  137,60,36,232,251,1,16,255,221,92,36,32,199,68,36,4,252,253,252,255,
+  252,255,252,255,137,60,36,232,251,1,9,221,68,36,32,255,199,68,36,
+  4,252,255,252,255,252,255,252,255,137,60,36,232,251,1,17,137,68,36,
+  32,137,84,36,36,199,68,36,4,252,253,252,255,252,255,252,255,137,60,
+  36,232,251,1,9,139,68,36,32,139,84,36,36,255,199,68,36,4,252,255,252,255,
+  252,255,252,255,137,60,36,232,251,1,18,102,15,214,68,36,32,102,
+  15,214,76,36,40,199,68,36,4,252,253,252,255,252,255,252,255,137,
+  60,36,232,251,1,9,252,243,15,126,68,36,32,252,243,15,126,76,36,40,
+  255,139,141,233,199,68,36,8,252,255,252,255,252,255,252,255,137,124,
+  36,4,137,12,36,232,251,1,18,131,252,236,4,199,68,36,4,252,253,252,255,
+  252,255,252,255,137,60,36,232,251,1,9,255,139,125,252,252,137,252,236,
+  93,194,236,255,85,137,229,87,86,139,189,233,131,252,236,16,137,60,36,232,
+  251,1,19,137,198,129,252,248,239,255,15,141,244,248,102,184,0,0,199,
+  68,36,4,237,137,60,36,232,251,1,20,248,2,15,142,244,247,102,184,0,0,
+  199,68,36,4,237,137,60,36,232,251,1,20,255,15,141,244,247,102,184,0,
+  0,199,68,36,4,237,137,60,36,232,251,1,20,255,248,1,255,193,224,4,41,
+  196,129,252,236,239,255,199,68,36,8,237,199,68,36,4,0,0,0,0,137,
+  60,36,232,251,1,1,131,252,236,16,255,199,68,36,12,237,199,68,36,8,237,
+  199,68,36,4,237,137,60,36,232,251,1,8,255,199,68,36,12,237,199,68,36,
+  8,237,199,68,36,4,237,137,60,36,232,251,1,21,255,199,68,36,12,237,199,
+  68,36,8,237,199,68,36,4,237,137,60,36,232,251,1,10,255,199,68,36,4,237,
+  137,60,36,232,251,1,12,255,15,182,192,255,15,190,192,255,15,183,192,
+  255,15,191,192,255,199,68,36,4,237,137,60,36,232,251,1,12,131,252,248,
+  0,15,149,208,15,182,192,255,199,68,36,4,237,137,60,36,232,251,1,11,
+  255,199,68,36,4,237,137,60,36,232,251,1,15,255,199,68,36,4,237,137,60,
+  36,232,251,1,13,255,199,68,36,4,237,137,60,36,232,251,1,14,255,199,68,
+  36,4,237,137,60,36,232,251,1,16,255,199,68,36,4,237,137,60,36,232,251,1,
+  18,255,252,243,15,126,193,255,141,132,253,36,233,131,252,236,4,199,
+  68,36,8,237,137,124,36,4,137,4,36,232,251,1,18,255,199,68,36,4,237,137,
+  60,36,232,251,1,17,255,199,68,36,4,237,137,60,36,232,251,1,17,137,4,36,
+  217,4,36,255,137,20,36,217,4,36,255,137,224,129,192,239,137,68,36,12,
+  137,116,36,8,199,68,36,4,237,137,60,36,232,251,1,22,255,185,237,139,1,137,
+  4,36,232,251,1,23,255,131,196,32,255,139,148,253,36,233,255,139,12,36,255,
+  129,196,239,255,232,251,1,24,131,252,236,48,255,137,68,36,32,232,251,
+  1,25,185,237,137,1,199,68,36,8,237,199,68,36,4,237,137,60,36,232,251,
+  1,1,139,76,36,32,137,8,184,1,0,0,0,139,117,252,248,139,125,252,252,
   137,252,236,93,195,255,137,68,36,32,232,251,1,25,185,237,137,1,139,68,36,
-  32,137,68,36,4,137,60,36,232,251,1,26,184,1,0.0,0.0,0.0,139,117,252,248,139,
+  32,137,68,36,4,137,60,36,232,251,1,26,184,1,0,0,0,139,117,252,248,139,
   125,252,252,137,252,236,93,195,255,137,84,36,36,137,68,36,32,232,251,1,25,
-  185,237,137,1,199.0,68,36,8,237,199.0,68,36,4,0,0.0,0.0,0.0,137,60,36,232,
-  251,1,1,139,76,36,36,139,84,36,32,137,72,4,137,16,184,1,0.0,0.0,0.0,139,117,
+  185,237,137,1,199,68,36,8,237,199,68,36,4,0,0,0,0,137,60,36,232,
+  251,1,1,139,76,36,36,139,84,36,32,137,72,4,137,16,184,1,0,0,0,139,117,
   252,248,139,125,252,252,137,252,236,93,195,255,137,68,36,32,137,84,36,36,
-  232,251,1,25,185,237,137,1,199.0,68,36,8,237,199.0,68,36,4,237,137,60,36,
-  232,251,1,1,139,76,36,32,137,8,139,76,36,36,137,72,4,184,1,0.0,0.0,0.0,139,
-  117,252,248,139,125,252,252,137,252,236,93,195,255,131.0,252,236,4,232,251,
-  1,25,185,237,137,1,184,1,0.0,0.0,0.0,139,117,252,248,139,125,252,252,137,
-  252,236,93,195,255,232,251,1,25,185,237,137,1,184,0,0.0,0.0,0.0,139,117,252,
-  248,139,125,252,252,137,252,236,93,195,255,15.0,182,192,137,68,36,32,232,
+  232,251,1,25,185,237,137,1,199,68,36,8,237,199,68,36,4,237,137,60,36,
+  232,251,1,1,139,76,36,32,137,8,139,76,36,36,137,72,4,184,1,0,0,0,139,
+  117,252,248,139,125,252,252,137,252,236,93,195,255,131,252,236,4,232,251,
+  1,25,185,237,137,1,184,1,0,0,0,139,117,252,248,139,125,252,252,137,
+  252,236,93,195,255,232,251,1,25,185,237,137,1,184,0,0,0,0,139,117,252,
+  248,139,125,252,252,137,252,236,93,195,255,15,182,192,137,68,36,32,232,
   251,1,25,185,237,137,1,139,68,36,32,137,68,36,4,137,60,36,232,251,1,4,184,
-  1,0.0,0.0,0.0,139,117,252,248,139,125,252,252,137,252,236,93,195,255,137,
+  1,0,0,0,139,117,252,248,139,125,252,252,137,252,236,93,195,255,137,
   68,36,32,232,251,1,25,185,237,137,1,139,68,36,32,137,68,36,4,137,60,36,232,
-  251,1,5,184,1,0.0,0.0,0.0,139,117,252,248,139,125,252,252,137,252,236,93,
+  251,1,5,184,1,0,0,0,139,117,252,248,139,125,252,252,137,252,236,93,
   195,255,137,68,36,32,232,251,1,25,185,237,137,1,139,68,36,32,137,68,36,4,
-  137,60,36,232,251,1,6,184,1,0.0,0.0,0.0,139,117,252,248,139,125,252,252,137,
-  252,236,93,195,255,221.0,92,36,4,232,251,1,25,185,237,137,1,137,60,36,232,
-  251,1,3,184,1,0.0,0.0,0.0,139,117,252,248,139,125,252,252,137,252,236,93,
+  137,60,36,232,251,1,6,184,1,0,0,0,139,117,252,248,139,125,252,252,137,
+  252,236,93,195,255,221,92,36,4,232,251,1,25,185,237,137,1,137,60,36,232,
+  251,1,3,184,1,0,0,0,139,117,252,248,139,125,252,252,137,252,236,93,
   195,255
 };
 
diff --git a/ffi.c b/ffi.c
index a830501..975344d 100644
--- a/ffi.c
+++ b/ffi.c
@@ -697,7 +697,7 @@ static int get_cfunction_address(lua_State* L, int idx, cfunction* addr)
      * callback_mt
      */
 
-    cfunction* f = lua_touserdata(L, -3);
+    cfunction* f = (cfunction*)lua_touserdata(L, -3);
     *addr = f[1];
     lua_pop(L, 3);
     return 1;
@@ -1201,9 +1201,8 @@ static int should_pack(lua_State *L, int ct_usr, struct ctype* ct, int idx)
         int same = is_same_type(L, ct_usr, -1, ct, &argt);
         lua_pop(L, 1);
         return !same;
-    default:
-        return 1;
     }
+	return 1;
 }
 
 static int do_new(lua_State* L, int is_cast)
@@ -1823,7 +1822,7 @@ err:
 
         if ((uintptr_t) data & PTR_ALIGN_MASK) {
             memcpy(misalignbuf.c, data, sizeof(void*));
-            data = misalignbuf.c;
+            data = (char*)misalignbuf.c;
         }
 #endif
         to = push_cdata(L, -1, &ct);
@@ -1855,7 +1854,7 @@ err:
 
         if ((uintptr_t) data & (ct.base_size - 1)) {
             memcpy(misalignbuf.c, data, ct.base_size);
-            data = misalignbuf.c;
+            data = (char*)misalignbuf.c;
         }
 #endif
 
@@ -2623,12 +2622,12 @@ static int cdata_tostring(lua_State* L)
         return 1;
 
     case INT64_TYPE:
-        sprintf(buf, ct.is_unsigned ? "%"PRIu64 : "%"PRId64, *(uint64_t*) p);
+        sprintf(buf, ct.is_unsigned ? "%" PRIu64 : "%" PRId64, *(uint64_t*) p);
         lua_pushstring(L, buf);
         return 1;
 
     default:
-        sprintf(buf, ct.is_unsigned ? "%"PRId64 : "%"PRId64, (int64_t) check_intptr(L, 1, p, &ct));
+        sprintf(buf, ct.is_unsigned ? "%" PRId64 : "%" PRId64, (int64_t) check_intptr(L, 1, p, &ct));
         lua_pushstring(L, buf);
         return 1;
     }
@@ -2709,7 +2708,7 @@ static int ffi_string(lua_State* L)
             sz = (size_t) luaL_checknumber(L, 2);
 
         } else if (ct.is_array && !ct.is_variable_array) {
-            char* nul = memchr(data, '\0', ct.array_size);
+            char* nul = (char*)memchr(data, '\0', ct.array_size);
             sz = nul ? nul - data : ct.array_size;
 
         } else {
@@ -3289,7 +3288,7 @@ static int setup_upvals(lua_State* L)
 
 #else /* !_WIN32 */
         size_t sz = sizeof(void*) * 5;
-        void** libs = lua_newuserdata(L, sz);
+        void** libs = (void**)lua_newuserdata(L, sz);
         memset(libs, 0, sz);
 
         libs[0] = LoadLibraryA(NULL); /* exe */
diff --git a/ffi.h b/ffi.h
index 4f29736..6388f86 100644
--- a/ffi.h
+++ b/ffi.h
@@ -135,10 +135,10 @@ static void (lua_remove)(lua_State *L, int idx) {
 # define ARCH_ARM
 #elif defined __powerpc64__
 # define ARCH_PPC64
-#elif defined __EMSCRIPTEN__
+#elif defined __EMSCRIPTEN__ || defined __WASM__
 # define ARCH_WASM
 #else
-# error
+# error unknown arch
 #endif
 
 
